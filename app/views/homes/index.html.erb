<%= turbo_frame_tag 'assign_dev_modal' %>
<div class="container mt-2">
  <div class="d-flex justify-content-between align-items-center mb-4">
    <h1> Interviews </h1>
    <div>
      <%= link_to "New client request" ,new_client_request_path, method: :get ,class:"btn btn-success border-0 rounded shadow px-3 py-2" %>
      <%= link_to "Add department" ,new_department_path, method: :get ,class:"btn btn-warning border-0 rounded shadow px-3 py-2" %>
    </div>
  </div>
  <div class="d-flex justify-content-around">
    <% @kanban_columns.each do |col| %>
      <div class="box border" data-item="<%=col.id %>">
        <h3 class="text-center"><%=col.name.humanize%></h3>
        <hr>
        <div class="kvs-card" style="height: 770px; overflow: auto;">
          <% col.client_requests.each do |interview| %>
            <div class="border bg-warning bg-opacity-50 m-2">
              <div class="card m-2 border border-danger" >
                <div class="card-body">
                  <p class="card-text mb-0">#<%= interview.id %></p>
                  <h5 class="card-title"><%= interview.customer_name %></h5>
                  <p>
                    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#Req<%= interview.id %>" aria-expanded="false" aria-controls="collapseExample">  </button>
                  </p>
                </div>
              </div>
              <div class="sub-tickets collapse" id="Req<%= interview.id %>">
                <% interview.departments.each do |dept| %>
                  <% if interview.kanban_column.name == 'new_request' && dept.no_of_resources !=0 %>
                    <div class="card m-2  border border-dark" >
                      <div class="card-body">
                        <p class="mb-0">dept. <%=dept.name%></p>
                        <p class="mb-0">no of resources: <%=dept.no_of_resources%></p>
                        <%= link_to 'Assign Developer', new_developer_path(id: dept.id), class:"btn btn-danger me-2 btn-sm assign-dev", data: { 'turbo-frame': 'assign_dev_modal' } %>
                        <%# <%= button_to "Assign Developer" ,new_developer_path(id: dept.id), class:"btn btn-danger me-2 btn-sm assign-dev"%>
                      </div>
                    </div>
                  <% end %>
                  <% dept.developers.each do |dev| %>
                    <% if col.name == dev.developer_status %>
                      <div class="sub-card">
                        <div class="card m-2  border border-dark"  data-item="<%=dev.id %>">
                          <p class="mb-0">dept. <%=dept.name%></p>
                          <p class="mb-0">developer. <%=dev.name%></p>
                        </div>
                      </div>
                    <% end %>
                  <% end %>
                <%end%>
              </div>
            </div>
          <%end%>
          <!--if developers exist and main ticket is in new request-->
          <% @client_requests.each do |interview| %>
            <% @card_id = interview.customer_name+"_#{interview.id}"+"_#{col.id}" %>
            <% @card_class = interview.customer_name+"_#{interview.id}" %>
            <div class="border bg-warning bg-opacity-50 m-2 card-header main-card-div" >
              #id : <%=interview.id%>
              <%=interview.customer_name%>
              <% interview.departments.each do |dept| %>
                <% dept.developers.each do |dev| %>
                  <% if col.name == dev.developer_status && interview.kanban_column.name !=  dev.developer_status %>
                    <div class="m-2 sub-card" id="<%= @card_id %>">
                      <div class="card m-2" data-item="<%= dev.id %>" data-value="<%= @card_class %>">
                        <div class="card-body">
                          #id : <%=dev.id%>
                          <p class="mb-0">dept. <%=dept.name%></p>
                          <p class="mb-0">developer. <%=dev.name%></p>
                        </div>
                      </div>
                    </div>
                  <% end %>
                <%end%>
              <%end %>
            </div>
          <%end%>
          <!-- -->
        </div>
      </div>
    <% end %>
  </div>
</div>
<script>
  // ---------------- Kanban with Sortable --------------------
  // import "jquery";

  var test = document.querySelectorAll(".main-card-div")
  for (let i = 0; i < test.length; i++) {
    if (test[i].children.length == 0){
      test[i].remove();
    }
  }
  if (typeof jQuery != 'undefined') {
    console.log('jQuery loaded from index');
  }
  else {
    console.log('not loaded from index');
  }

  $( function() {
      $( ".kvs-card, .sub-card, .sub1-card" ).sortable({
        connectWith: ".kvs-card",
        // event => sub-card div
        // ui => selected card jisme draggeble =true
        // this = event.target
            start: function( event, ui ) {
              // debugger
              console.log("Take IT......");
              // console.log(event);
              // console.log(ui);
              // console.log(this.id);
              this.parentElement.style.border = "2px dashed #ccc";
                  ui.item[0].style.border = "1px dashed black";
            },
            change: function(event, ui){
              // console.log("This is Change Event");
              // console.log("Called When something changes");
              ui.item[0].style.border = "1px solid red";
            },
            out: function( event, ui ) {
              // console.log("This is out event")
              // console.log("Called When card move outside sortable area")
              $(this).css('background-color', 'rgba(0,0,0,.0)')
            },
            over: function( event, ui ) {
              // debugger
              // console.log("This is over event")
              // console.log("Called When card move inside sortable area")
              $(this).css('background-color', 'rgba(0,0,0,.1)')
            },
          receive: function(event, ui) {
              this.style.border = "1px solid black";
              var developer_id = ui.item[0].dataset.item  // developer id
              var kanban_col_id = this.parentElement.dataset.item // kanban_col id
              // debugger
              //   $(".kvs-card, .sub-card").sortable('cancel');
              //   var ad = $.ajax({
              //   url: "/interviews/" + el.item[0].getAttribute('value') + "/getAD",
              //   type: "get",
              //   async: false,
              //   success: function(data) {},
              //   error: function(data) {}
              // })
              // var interview_status = ad.responseJSON.interview_status
              // // console.log(ad)
              // if(interview_status === 'new_request')
              // {
              //   alert("can't move"); // need to check with karan
              //   $(".kvs-card").sortable('cancel');
              //   return;
              // }
              $.ajax({
                url: "/developer_status_update",
                type: "post",
                data: {developer_id: developer_id, kanban_col_id:kanban_col_id},
                success: function(data) {alert("updated")},
                error: function(data) {}
              })
              console.log("--------receive----------");
              $(this.parentElement).css('background-color', 'rgba(0,0,0,.0)')
              // debugger
              var data_value = ui.item[0].getAttribute('data-value')
              var main_div = document.querySelectorAll('[id^='+data_value+'_'+kanban_col_id+']')
              // var sub_div = document.getElementsByClassName(ui.item[0].getAttribute('data-value'))
              // debugger
              if (main_div.length != 0){
                main_div[0].appendChild(ui.item[0]);
              }
              else {
                // debugger
                //  Need to create a div
                //  Create this div 1 = <div class="border bg-warning bg-opacity-50 m-2 card-header main-card-div" >
                // Create this div 2 = <div class="m-2 sub-card" id="<%= @card_id %>">
                // CARD ID = cust-name_cust-id_col-id

                var create_div = document.createElement("div");
                this.appendChild(create_div);
                var dataValueArray = data_value.split("_")
                create_div.innerHTML = '#id : ' + dataValueArray[1] + " " + dataValueArray[0]
                create_div.classList.add("border", "bg-warning", "bg-opacity-50", "m-2", "card-header", "main-card-div");
                var subcard_div = create_div.appendChild(document.createElement("div"));
                subcard_div.classList.add("m-2", "sub-card")
                subcard_div.appendChild(ui.item[0])
                subcard_div.setAttribute('id',''+data_value+'_'+kanban_col_id+'');
              }

              // window.location.reload();
            },
            update: function( event, ui ) {
              console.log("--------update----------");
            },
            stop: function( event, ui ) {
              console.log("--------stop----------");
              //------------------reordering-------------------
              const ulElements = document.querySelectorAll(".kvs-card")
              const kanbanIds = {"columns": []};
              ulElements.forEach(ul => {
                const itemIds = [];
                ul.querySelectorAll(".kvs-card-board")
                .forEach(item => itemIds.push(Number.parseInt(item.getAttribute('value'))));
                kanbanIds.columns.push(
                  {
                    'id': Number.parseInt(ul.parentElement.id),
                    'itemIds': itemIds
                  }
                );
              });
              // $.ajax({
              //   url: '/interviews/sort',
              //   type: "post",
              //   async: false,
              //   data:{ KanbanCardIds: JSON.stringify(kanbanIds) },
              //   success: function(data) {},
              // })
              //----------------------------------------------------
            },
        });
      });
</script>
